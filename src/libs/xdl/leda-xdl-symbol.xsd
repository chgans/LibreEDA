<?xml version="1.0" encoding="UTF-8"?>
<xs:schema elementFormDefault="qualified" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.leda.org/xdl" xmlns:xdl="http://www.leda.org/xdl">
  <xs:element name="symbol" type="xdl:Symbol"/>
  <xs:complexType name="Symbol">
    <xs:sequence>
    <!-- TODO: name and label should be xdl::Label as they can be 'placed' and displayed -->
      <xs:element name="name" type="xs:string"/>
      <xs:element name="label" type="xs:string"/>
      <xs:element name="drawing" type="xdl:ItemList"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="ItemList">
    <xs:sequence>
    	<xs:group ref="xdl:AnyItem" minOccurs="0" maxOccurs="unbounded" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="Item">
    <!-- FIXME: not all items need a pen and a brush -->
    <xs:sequence>
    	<xs:element name="position" type="xdl:Point" />
        <xs:element name="line-style" type="xdl:LineStyle" minOccurs="0"/>
        <xs:element name="line-width" type="xdl:LineWidth" minOccurs="0"/>
        <xs:element name="line-color" type="xdl:Color" minOccurs="0"/>
        <xs:element name="fill-style" type="xdl:FillStyle" minOccurs="0"/>
        <xs:element name="fill-color" type="xdl:Color" minOccurs="0"/>
        <xs:element name="z-value" type="xs:double" minOccurs="0" />
    	<xs:element name="rotation" type="xdl:Angle" minOccurs="0" />
    	<xs:element name="opacity" type="xdl:Opacity" minOccurs="0" />
    	<xs:element name="locked" type="xs:boolean" minOccurs="0" />
        <xs:element name="x-mirrored" type="xs:boolean" minOccurs="0" />
        <xs:element name="y-mirrored" type="xs:boolean" minOccurs="0" />
        <xs:element name="visible" type="xs:boolean" minOccurs="0" />
    </xs:sequence>
  </xs:complexType>
  <!-- TBD: circle vs ellipse and square vs rectangle -> use a fixed ratio property?
       TBD: Similarly use an 'arc' boolean property
       TBD: Shape option: Open, Pie, Chord
  -->
  <xs:complexType name="Circle">
    <xs:complexContent>
      <xs:extension base="xdl:Item">
        <xs:sequence>
          <xs:element name="radius" type="xdl:NonNegativeDouble"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="CircularArc">
    <xs:complexContent>
      <xs:extension base="xdl:Item">
        <xs:sequence>
          <xs:element name="radius" type="xdl:NonNegativeDouble"/>
          <xs:element name="start-angle" type="xdl:Angle"/>
          <xs:element name="span-angle" type="xdl:Angle"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="Ellipse">
    <xs:complexContent>
      <xs:extension base="xdl:Item">
        <xs:sequence>
          <xs:element name="x-radius" type="xdl:NonNegativeDouble"/>
          <xs:element name="y-radius" type="xdl:NonNegativeDouble"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="EllipticalArc">
    <xs:complexContent>
      <xs:extension base="xdl:Item">
        <xs:sequence>
          <xs:element name="x-radius" type="xdl:NonNegativeDouble"/>
          <xs:element name="y-radius" type="xdl:NonNegativeDouble"/>
          <xs:element name="start-angle" type="xdl:Angle"/>
          <xs:element name="span-angle" type="xdl:Angle"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="Rectangle">
    <xs:complexContent>
      <xs:extension base="xdl:Item">
        <xs:sequence>
          <xs:element name="width" type="xdl:NonNegativeDouble"/>
          <xs:element name="height" type="xdl:NonNegativeDouble"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="Polyline">
    <xs:complexContent>
      <xs:extension base="xdl:Item">
        <xs:sequence>
                <xs:element name="vertices" type="xdl:PointList" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="Polygon">
    <xs:complexContent>
      <xs:extension base="xdl:Item">
        <xs:sequence>
                <xs:element name="vertices" type="xdl:PointList" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="Pin">
    <xs:complexContent>
      <xs:extension base="xdl:Item">
        <!-- FIXME: label and designator should be xdl::Label -->
        <xs:sequence>
          <xs:element name="designator" type="xs:string" />
          <xs:element name="label" type="xs:string" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ItemGroup">
    <xs:complexContent>
      <xs:extension base="xdl:Item">
        <xs:sequence>
          <xs:element name="children" type="xdl:ItemList"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="Label">
    <xs:complexContent>
      <xs:extension base="xdl:Item">
        <xs:sequence>
          <xs:element name="text" type="xs:string" />
          <xs:element name="color" type="xdl:Color"  minOccurs="0" />
          <xs:element name="size" type="xs:nonNegativeInteger" minOccurs="0" />
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:group name="AnyItem">
    <xs:choice>
        <xs:element name="polyline" type="xdl:Polyline" />
        <xs:element name="polygon" type="xdl:Polygon" />
        <xs:element name="rectangle" type="xdl:Rectangle" />
        <xs:element name="circle" type="xdl:Circle" />
        <xs:element name="circular-arc" type="xdl:CircularArc" />
        <xs:element name="ellipse" type="xdl:Ellipse" />
        <xs:element name="elliptical-arc" type="xdl:EllipticalArc" />
        <xs:element name="label" type="xdl:Label" />
        <xs:element name="pin" type="xdl:Pin" />
    	<xs:element name="group" type="xdl:ItemGroup" />
    </xs:choice>
  </xs:group>
  <xs:complexType name="Point">
    <xs:sequence>
      <xs:element name="x" type="xs:double"/>
      <xs:element name="y" type="xs:double"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="PointList">
    <xs:sequence>
      <xs:element name="point" type="xdl:Point" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="LineWidth">
    <xs:restriction base="xs:string">
      <xs:enumeration value="Thinest"/>
      <xs:enumeration value="Thiner"/>
      <xs:enumeration value="Thin"/>
      <xs:enumeration value="SlightlyThin"/>
      <xs:enumeration value="Medium"/>
      <xs:enumeration value="SlightlyThick"/>
      <xs:enumeration value="Thick"/>
      <xs:enumeration value="Thicker"/>
      <xs:enumeration value="Thickest"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="LineStyle">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None"/>
      <xs:enumeration value="Solid"/>
      <xs:enumeration value="Dash"/>
      <xs:enumeration value="Dot"/>
      <xs:enumeration value="DashDot"/>
      <xs:enumeration value="DashDotDot"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="FillStyle">
    <xs:restriction base="xs:string">
      <xs:enumeration value="None"/>
      <xs:enumeration value="Solid"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Color">
    <xs:restriction base="xs:string">
    <xs:enumeration value="PrimaryContent"/>
    <xs:enumeration value="SecondaryContent"/>
    <xs:enumeration value="EmphasisedContent"/>
    <xs:enumeration value="Background"/>
    <xs:enumeration value="BackgroundHighlight"/>
    <xs:enumeration value="Yellow"/>
    <xs:enumeration value="Orange"/>
    <xs:enumeration value="Red"/>
    <xs:enumeration value="Magenta"/>
    <xs:enumeration value="Violet"/>
    <xs:enumeration value="Blue"/>
    <xs:enumeration value="Cyan"/>
    <xs:enumeration value="Green"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Angle">
  	<xs:restriction base="xs:double">
  		<xs:minInclusive value="0.0"></xs:minInclusive>
  		<xs:maxInclusive value="360.0"></xs:maxInclusive>
  		<xs:whiteSpace value="collapse"></xs:whiteSpace>
  	</xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="Opacity">
  	<xs:restriction base="xs:double">
  		<xs:minInclusive value="0.0"></xs:minInclusive>
  		<xs:maxInclusive value="1.0"></xs:maxInclusive>
  		<xs:whiteSpace value="collapse"></xs:whiteSpace>
  	</xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="NonNegativeDouble"> <!-- TODO: rename to Length -->
  	<xs:restriction base="xs:double">
  		<xs:minInclusive value="0.0"></xs:minInclusive>
  	</xs:restriction>
  </xs:simpleType>
</xs:schema>
